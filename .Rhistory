str(test)
all(numbers_only(na.omit(test$batch ))==T)&
all(letters_only(na.omit(test$batch ))==F)
numbers_only(na.omit(test$batch ))
letters_only(na.omit(test$batch )
)
numbers_only <- function(x) grepl("^[:digit:]+$", x)
letters_only <- function(x) grepl("^[A-Za-z]+$", x)
all(numbers_only(na.omit(test$batch ))==T)&
all(letters_only(na.omit(test$batch ))==F)
numbers_only(na.omit(test$batch ))
letters_only(na.omit(test$batch ))
all(numbers_only(na.omit(test$id_cit ))==T)&
all(letters_only(na.omit(test$id_cit ))==F)
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==T)&
all(letters_only(na.omit(test[,i]))==F)) {
test[,i] = as.double(test[,i])
}
}
str(test)
test = Meta$Clinic
str(test)
numbers_only$molgrad
numbers_only(test$molgrad)
letters_only(test$molgrad)
letters_only <- function(x) !grepl("^[:digit:]+$", x)
numbers_only(test$molgrad)
letters_only(test$molgrad)
all(numbers_only(na.omit(test$batch ))==T)&
all(letters_only(na.omit(test$batch ))==F)
all(numbers_only(na.omit(test$id_cit ))==T)&
all(letters_only(na.omit(test$id_cit ))==F)
letters_only(na.omit(test$batch )
)
numbers_only(test$id_cit)
letters_only(test$id_cit)
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
all(numbers_only(na.omit(test$id_cit )))
all(letters_only(na.omit(test$id_cit )))
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
all(numbers_only(na.omit(test$molgrad)))
all(letters_only(na.omit(test$molgrad)))
all(numbers_only(na.omit(test$id_cit )))
all(letters_only(na.omit(test$id_cit )))
all(letters_only(na.omit(test$molgrad)))
all(numbers_only(na.omit(test$molgrad)))
all(letters_only(na.omit(test$molgrad)))
letters_only(na.omit(test$molgrad))
numbers_only <- function(x) grepl("^[:digit:]+$", x)
letters_only <- function(x) !grepl("^[:digit:]+$", x)
all(numbers_only(na.omit(test$molgrad)))
all(letters_only(na.omit(test$molgrad)))
all(numbers_only(na.omit(test$id_cit )))
all(letters_only(na.omit(test$id_cit )))
all(numbers_only(na.omit(test$Rec.locale)))
all(letters_only(na.omit(test$Rec.locale)))
numbers_only(na.omit(test$Rec.locale))
na.omit(test$Rec.locale
)
test$Rec.locale
numbers_only(na.omit(test$Rec.locale))
numbers_only <- function(x) grepl("\\D", x)
letters_only <- function(x) !grepl("^[:digit:]+$", x)
numbers_only(na.omit(test$Rec.locale))
all(letters_only(na.omit(test$Rec.locale)))
all(numbers_only(na.omit(test$molgrad)))
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
letters_only <- function(x) !grepl("[^A-Za-z]", x)
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
numbers_only(na.omit(test$Rec.locale))
all(letters_only(na.omit(test$Rec.locale)))
numbers_only(na.omit(test$id_cit ))
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
test$id_cit
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
numbers_only(na.omit(test$Rec.locale))
letters_only(na.omit(test$Rec.locale))
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
double_only <- function(x) grepl("^[:digit:]+$", x)
double_only(na.omit(test$id_cit ))
double_only(na.omit(test$Rec.locale ))
double_only(na.omit(test$molgrad ))
parse_number(test$molgrad, locale = locale(decimal_mark = "."))
readr::parse_number(test$molgrad, locale = locale(decimal_mark = "."))
readr::parse_number(test$molgrad)
str(readr::parse_number(test$molgrad))
str(readr::parse_number(test$Rec.locale))
try(readr::parse_number(test$Rec.locale))
try(readr::parse_number(test$Rec.locale),silent = T)
er.try = try(readr::parse_number(test$Rec.locale),silent = T)
er.try
class(er.try)
class(er.try) == "try-error"
er.try = try(readr::parse_number(test$molgrad),silent = T)
er.try
class(er.try)
for (i in 1:ncol(test)){
er.try = try(readr::parse_number(test[,i]),silent = T)
if(!class(er.try) == "try-error"){
test[,i] = readr::parse_number(test[,i])
}
}
str(test)
test = Meta$Clinic
str(test)
for (i in 1:ncol(test)){
er.try = try(readr::parse_number(test[,i]),silent = T)
if(!class(er.try) == "try-error"){
test[,i] = readr::parse_number(test[,i])
}
}
str(test)
test
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
double_only <- function(x) grepl("^[:digit:]+$", x)
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
double_only(na.omit(test$molgrad ))
numbers_only <- function(x) !grepl("^[:alpha:]+$", x)
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
double_only(na.omit(test$molgrad ))
numbers_only(na.omit(test$Rec.locale))
letters_only(na.omit(test$Rec.locale))
double_only(na.omit(test$Rec.locale ))
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
double_only(na.omit(test$id_cit ))
numbers_only(na.omit(test$id_cit ))
numbers_only <- function(x, grepl("^[:alpha:]+$", x)
numbers_only <- function(x) !grepl("^[:alpha:]+$", x)
numbers_only(na.omit(test$molgrad))
numbers_only(na.omit(test$Rec.locale))
numbers_only(na.omit(test$id_cit ))
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
double_only(na.omit(test$molgrad ))
numbers_only <- function(x) !grepl("^[:alpha:]+$", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
numbers_only(na.omit(test$id_cit ))
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
numbers_only(na.omit(test$id_cit ))
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
double_only <- function(x) grepl("^[:digit:]+$", x)
numbers_only <- function(x) !grepl("\\D", x)
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
double_only(na.omit(test$id_cit ))
na.omit(test$id_cit
)
test = Meta$Clinic
str(test)
numbers_only(na.omit(test$id_cit ))
letters_only(na.omit(test$id_cit ))
double_only(na.omit(test$id_cit ))
#Num
numbers_only(na.omit(test$Rec.locale))
#Num
numbers_only(na.omit(test$Rec.locale)) #T
letters_only(na.omit(test$Rec.locale)) #F
double_only(na.omit(test$Rec.locale )) #T
na.omit(test$Rec.locale )
double_only(na.omit(test$Rec.locale ))
double_only(test$Rec.locale ) #F
#Double
numbers_only(na.omit(test$molgrad))
letters_only(na.omit(test$molgrad))
double_only(na.omit(test$molgrad ))
#Num
numbers_only(na.omit(test$Rec.locale)) #T
str_detect(na.omit(test$molgrad, "^[:alpha:]+$")
)
str_detect(na.omit(test$molgrad), "^[:alpha:]+$")
str_detect(na.omit(test$molgrad), "^[:digit:]+$")
all(numbers_only(na.omit(test$molgrad))==F)
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
er.try = try(readr::parse_number(test[,i]),silent = T)
if(!class(er.try) == "try-error"){
test[,i] = readr::parse_number(test[,i])
}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
View(test)
str_detect(na.omit(test$molgrad), "^[:digit:]+$")
str_detect(na.omit(test$id_cit), "^[:digit:]+$")
#Mixte
numbers_only(na.omit(test$id_cit ))  #F
test = Meta$Clinic
str(test)
#Num
numbers_only(na.omit(test$Rec.locale)) #T
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
double_only <- function(x) grepl("^[:digit:]+$", x)
#Mixte
numbers_only(na.omit(test$id_cit ))  #F
letters_only(na.omit(test$id_cit ))  #F
double_only(na.omit(test$id_cit )) #F
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
er.try = try(readr::parse_number(test[,i]),silent = T)
if(!class(er.try) == "try-error"){
test[,i] = readr::parse_number(test[,i])
}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
numbers_only <- function(x) !grepl("\\D", x)
letters_only <- function(x) !grepl("[^A-Za-z]", x)
double_only <- function(x) grepl("^[:digit:]+$", x)
test = Meta$Clinic
#Mixte
numbers_only(na.omit(test$id_cit ))  #F
letters_only(na.omit(test$id_cit ))  #F
double_only(na.omit(test$id_cit )) #F
mixte <- function(x) grepl("\\D", x)
mixte(test$Rec.locale)
mixte(na.omit(test$id_cit ))
mixte(na.omit(test$molgrad ))
t = gsub("[.]", "", na.omit(test$id_cit ) )
t = gsub("[-]", "", t )
numbers_only(t)
t = gsub("[.]", "", na.omit(test$molgrad ) )
t = gsub("[-]", "", t )
numbers_only(t)
test = Meta$Clinic
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
if(all(numbers_only(t)== T)){
test[,i] = readr::parse_number(test[,i])
}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
test[,i]
test = Meta$Clinic
test[,i]
View(test)
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
if(all(numbers_only(na.omit(t))== T)){
test[,i] = readr::parse_number(test[,i])
}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
test = Meta$Clinic
test[,i]
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
all(numbers_only(na.omit(t))
)
all(numbers_only(na.omit(t))== T)
na.omit(t)
numbers_only(na.omit(t)
)
length(t)
length(na.omit(t))
test
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i] = readr::parse_number(test[,i])
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)
all(numbers_only(na.omit(t))== T)
readr::parse_number(test[,i])
test[,i]
?readr::parse_number
readr::parse_number(test[,i],na = NA )
readr::parse_number(test[,i],na = "NA" )
test[is.na(test)]
test[,i][is.na( test[,i])]
test[,i][is.na( test[,i])] = "NA"
readr::parse_number(test[,i], na = "NA" )
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i][is.na( test[,i])] = "NA"
test[,i] = readr::parse_number(test[,i], na = "NA" )
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
i=44
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
length(na.omit(t))!=0
all(numbers_only(na.omit(t))== T)
numbers_only(na.omit(t))
na.omit(t)[!numbers_only(na.omit(t))]
test = Meta$Clinic
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
numbers_only(na.omit(t))
na.omit(t)[!numbers_only(na.omit(t))]
test[,i]=="NA"
test[,i][test[,i]=="NA"] = NA
all(numbers_only(na.omit(t))== T)
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
length(na.omit(t))!=0
numbers_only(na.omit(t))
all(numbers_only(na.omit(t))== T)
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
test[,i][test[,i]=="NA"] = NA
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i][is.na( test[,i])] = "NA"
test[,i] = readr::parse_number(test[,i], na = "NA" )
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
which(is.na(test))
i=44
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
t
readr::parse_number(test[,i], na = "NA" )
as.numeric(readr::parse_number(test[,i], na = "NA" ))
test = Meta$Clinic
test=="NA"
test[test=="NA"]
test[test=="NA"] = NA
test[test=="xx"]
test=="xx"
which(test=="xx")
test[which(test=="xx")] = NA
test[test=="xx"] = NA
test
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
test[,i][test[,i]=="NA"] = NA
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i][is.na( test[,i])] = "NA"
test[,i] = as.numeric(readr::parse_number(test[,i], na = "NA" ))
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
test[,i]
i=44
test[,i]
na.omit(test[,i)
na.omit(test[,i])
readr::parse_number(test[,i])
test[,i]=="NA"
test[,i]==NA
is.na(test[,i])
as.numeric(readr::parse_number(test[,i], na = "NA" ))
all(numbers_only(na.omit(test[,i]))==F)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)
all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)
numbers_only(na.omit(test[,i])
)
letters_only(na.omit(test[,i])
)
all(double_only(na.omit(test[,i] ))==F)
double_only(na.omit(test[,i] )
)
numbers_only <- function(x) { t = gsub("[.]", "", x)
t = gsub("[-]", "", t )
!grepl("\\D", t)}
#Double
numbers_only(na.omit(test$molgrad)) #F
#Num
numbers_only(na.omit(test$Rec.locale)) #T
letters_only(na.omit(test$Rec.locale)) #F
double_only(test$Rec.locale ) #F
mixte(test$Rec.locale)
#Mixte
numbers_only(na.omit(test$id_cit ))  #F
letters_only(na.omit(test$id_cit ))  #F
double_only(na.omit(test$id_cit )) #F
mixte(na.omit(test$id_cit )) #T
#Double
numbers_only(na.omit(test$molgrad)) #F
letters_only(na.omit(test$molgrad)) #F
double_only(na.omit(test$molgrad ))#F
mixte(na.omit(test$molgrad ))
test = Meta$Clinic
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
test[,i][test[,i]=="NA"] = NA
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i][is.na( test[,i])] = "NA"
test[,i] = as.numeric(readr::parse_number(test[,i], na = "NA" ))
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
i=44
numbers_only(na.omit(test[,i])
)
test[,i]
test = Meta$Clinic
test[test=="NA"] = NA
test[test=="xx"] = NA
for (i in 1:ncol(test)){
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)){
t = gsub("[.]", "", test[,i] )
t = gsub("[-]", "", t )
test[,i][test[,i]=="NA"] = NA
if(length(na.omit(t))!=0){
if(all(numbers_only(na.omit(t))== T)){
test[,i][is.na( test[,i])] = "NA"
test[,i] = as.numeric(readr::parse_number(test[,i], na = "NA" ))
}}}
if(all(numbers_only(na.omit(test[,i]))==T)& #F
all(letters_only(na.omit(test[,i]))==F)& #F
all(double_only(na.omit(test[,i] ))==F)) {
test[,i] = as.numeric(test[,i])
}
}
str(test)
