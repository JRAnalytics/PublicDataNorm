rownames(test) <- test[,1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frame
message("Patient.clinical data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Patients.clinic V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind( MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
if(str_detect(toupper(i), "NORMALIZED")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix"))
message("Normalized gene expression exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Normalized"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
test <- test[,-1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("Normalized gene expression matrix data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
if(str_detect(toupper(i), "RAW.COUNT|RAWCOUNT|RAW.MATRIX|RAWMATRIX")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix"))
message("Raw gene expression exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Raw.matrix|Rawmatrix|rawcount"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
test <- test[,-1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("Raw gene expression matrix data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
}
if (str_detect(toupper(i), "ANNOT")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- MetaData[[i]]
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file"))
message("geneAnnotation exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "geneAnnotation"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
rownames(test) <- test[,"EnsemblID"]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("gene Annotation file data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportaded file"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- MetaData[[i]]
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
}
}
ExportCSV(MetaData = Meta, list.files.path = list.files.path,project = project)
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df
df <- df[str_detect(df$Filenames, "geneAnnotation"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
View(test)
rownames(test) <- test[,"EnsemblID"]
head(test)
dplyr::all_equal(test,Meta$geneAnnotation)
head(Meta$geneAnnotation)
head(Meta$geneAnnotation$Entrez.id)
class(head(Meta$geneAnnotation$Entrez.id))
class(head(test$Entrez.id))
test[,"Entrez.id"] <- as.character(test[,"Entrez.id"])
dplyr::all_equal(test,Meta$geneAnnotation)
test$HGNC
Meta$geneAnnotation$HGNC
class(Meta$geneAnnotation)
class(Meta$geneAnnotation$HGNC)
class(test$HGNC)
test[,"HGNC"] <- as.character(test[,"HGNC"])
dplyr::all_equal(test,Meta$geneAnnotation)
dplyr::all_equal(test,Meta$geneAnnotation)==T
dplyr::all_equal(test,Meta$geneAnnotation)
rownames(test)==rownames(Meta$geneAnnotation)
all(rownames(test)==rownames(Meta$geneAnnotation))
sapply(test,function(x) class(x))
sapply(Meta$geneAnnotation,function(x) class(x))
#' ExportCSV Export MetaData inside object into ".csv" files
#'
#' @param MetaData a Meta  data files
#' @param list.files.path dirpath
#' @return ".csv" files into working directory
#' @export
#' @import utils
#' @import R.utils
#' @examples "non"
ExportCSV <- function (MetaData, list.files.path, project){
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
if(is.null(list.files.path)){stop("Need a list file path for saving data")}
if(!is.list(list.files.path)){stop(paste("list.files.path must be a list of file path whith Script, Raw genomic, Raw clinic, Processed and References directories in Parent Directory." ))}
count <- 0
object <- length(MetaData)+2
name <- names(MetaData)
message(paste("Exporting", object, "objects"))
if(!all(str_detect(toupper(names(MetaData)), "RAW.CLINIC")==F)) {
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Raw.clinical data will not be exported"))
}
if(exists("LexicClinic", mode= "any" )) {
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","LexicClinic"))
if (file.exists(paste0(list.files.path$Project.Processes,"/",project,".Lexic.txt"))) {
#Delete file if it exists
file.remove(paste0(list.files.path$Project.Processes,"/",project,".Lexic.txt"))
}
LexicClinic <- lapply(LexicClinic, function(x) {c(x[1],x)}) #Mandatory to duplicated listName in the listed values.
lapply(LexicClinic, write, paste0(list.files.path$Project.Processes,"/",project,".Lexic.txt"), append=TRUE, ncolumns=1000 ) #write a ".txt" file without listNames
}
if(exists("SamplesOrPatients", mode= "any" )) {
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","SamplesOrPatients"))
write.table(SamplesOrPatients, file= paste0(list.files.path$Project.Processes,"/",project,"SamplesOrPatients.txt"),quote = F, sep = "\t", row.names = F)}
for (i in name) {
if (!str_detect(toupper(i), "ANNOT")) {
if(str_detect(toupper(i), "SAMPLE.PHENO")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Sample.pheno"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind( MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Sample.pheno"))
message("Samples' pheno exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Sample.pheno"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frame
message("Samples.pheno data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
#adding version file history
if(Vnumber==1){ Vnumber = 2}
message(paste0("Exporting ", count, " / ", object,"object: ","Sample.pheno V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind( MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
if(str_detect(toupper(i), "PATIENT.CLINIC")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Patient.clinic"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind( MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Patient.clinic"))
message("Patient's clinical data exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Patient.clinic"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frame
message("Patient.clinical data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Patients.clinic V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind( MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
if(str_detect(toupper(i), "NORMALIZED")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix"))
message("Normalized gene expression exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Normalized"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
test <- test[,-1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("Normalized gene expression matrix data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Normalized gene expression matrix V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
if(str_detect(toupper(i), "RAW.COUNT|RAWCOUNT|RAW.MATRIX|RAWMATRIX")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix"))
message("Raw gene expression exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "Raw.matrix|Rawmatrix|rawcount"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
test <- as.data.frame(test)
rownames(test) <- test[,1]
test <- test[,-1]
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("Raw gene expression matrix data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportedfile"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","Raw gene expression matrix V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- cbind("GeneSymbol" = rownames(MetaData[[i]]), MetaData[[i]])
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
}
if (str_detect(toupper(i), "ANNOT")) {
LF <- list.files(list.files.path$Propject.VerifiedDataset)
lengthSTR <- length(LF[str_detect(LF,i)])
if(lengthSTR==0){
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file"))
filename <- paste0(list.files.path$Propject.VerifiedDataset,"/",project,".",i,".csv")
z <- MetaData[[i]]
write.csv(z,row.names = F ,file = filename)
message(paste("Compressing"))
R.utils::gzip(filename, destname=sprintf("%s.gz", filename), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else{
count <- count+1
message("-------------------------------------------------")
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file"))
message("geneAnnotation exported file exist. Loading to compare if different to Metaobject Version")
df <- file.info(list.files(list.files.path$Propject.VerifiedDataset, full.names = T))
df$Filenames <- unlist(lapply(str_split(rownames(df),paste0(project,"/")),"[[",2))
df <- df[str_detect(df$Filenames, "geneAnnotation"),]
filepath <- rownames(df)[which.max(df$mtime)]
test <- as.data.frame(data.table::fread(filepath))
rownames(test) <- test[,"EnsemblID"]
test[,"Entrez.id"] <- as.character(test[,"Entrez.id"])
test[,"HGNC"] <- as.character(test[,"HGNC"])
head(test)
filename <-  unlist(lapply(str_split(filepath,paste0(project,"/")),"[[",2))
if(!dplyr::all_equal(test,Meta[[i]])==T) { #Test ans Meta[[i]] are not the same data.frames
message("gene Annotation file data are not the same original data. A new version will be created")
filename2 <- unlist(lapply(str_split(filename,".csv"),"[[",1))
extension <- unlist(lapply(str_split(filename,".csv"),"[[",2))
version <- str_extract(filename2,"V[0-9]*")
Vnumber <- as.numeric(str_extract(version,"([0-9]+).*$"))+1
if(is.na(Vnumber)) {
Vnumber = 1
message(paste(filename, " already exist. Adding Version to the latest exportaded file"))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename2,".V",Vnumber,".csv",extension)
file.rename(from = filepath, to = filepath2)
}
if(Vnumber==1){ Vnumber = 2}
message(paste("Exporting", count, "/", object,"object: ","gene Annotation file V", Vnumber))
filename3 <- unlist(lapply(str_split(filename2,".V"),"[[",1))
filepath2 <- paste0(list.files.path$Propject.VerifiedDataset,"/",filename3,".V",Vnumber,".csv")
z <- MetaData[[i]]
write.csv(z,row.names = F ,file = filepath2)
message(paste("Compressing"))
R.utils::gzip(filepath2, destname=sprintf("%s.gz", filepath2), overwrite=T, remove=TRUE, BFR.SIZE=1e+07)
} else {
message(i," is the same data frame as ",filename)
message("Will not be saved")}
}}
}
}
ExportCSV(MetaData = Meta, list.files.path = list.files.path,project = project)
rm(ExportCSV)
