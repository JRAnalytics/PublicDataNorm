dt <- suppressWarnings(as.data.frame(data.table::fread(filepath, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} #else meta data object not found
} # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
traceback()
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
filepath <- path
if(all(str_detect(filepath, ".rds", negate = FALSE)==F) & all(str_detect(filepath, ".txt", negate = FALSE)==F) & all(str_detect(filepath, "csv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(filepath, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(filepath) }
if(str_detect(filepath, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(filepath, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} #else meta data object not found
}
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
filepath <- path
if(all(str_detect(filepath, ".rds", negate = FALSE)==F) & all(str_detect(filepath, ".txt", negate = FALSE)==F) & all(str_detect(filepath, "csv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(filepath, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(filepath) }
if(str_detect(filepath, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(filepath, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} } # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
traceback()
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
filepath <- path
if(all(str_detect(filepath, ".rds|.txt|.csv|.tsv", negate = FALSE)==F)  ){stop("#55 No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(filepath, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(filepath) }
if(str_detect(filepath, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(filepath, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} } # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
str_detect(list.files.path$RawData, ".rds|.txt|.csv|.tsv", negate = FALSE)
str_detect(list.files.path$RawData, "rds|txt|csv|tsv", negate = FALSE)
list.files.path$RawData
list.files(list.files.path$RawData)
list.files(list.files.path$Project.RawData)
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
LF <- list.files(path)
LF <- LF[str_detect(LF,"clinic")]
if(all(str_detect(LF, ".rds|.txt|.csv|.tsv", negate = FALSE)==F)  ){stop("#55 No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(LF, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(LF) }
if(str_detect(LF, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(LF, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} } # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
View(Meta)
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
LF <- list.files(path)
LF <- LF[str_detect(LF,"clinic")]
if(length(LF)>1){stop("Ther is more than one files with 'clinic' in its name. Switch to 'name.local.file' and 'mergeBy' ")}
if(all(str_detect(LF, ".rds|.txt|.csv|.tsv", negate = FALSE)==F)  ){stop("#55 No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(LF, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(LF) }
if(str_detect(LF, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(LF, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} } # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F, name.local.file = NULL,mergeBy = NULL)
str_detect(names(Meta), "Gao.raw.clinic")
all(str_detect(names(Meta), "Gao.raw.clinic"))
all(str_detect(names(Meta), "clinic"))
which(str_detect(names(Meta), "clinic")
)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic",
merge = F, name.local.file = NULL,mergeBy = NULL)
Meta$Gao.raw.clinic <- NULL
Meta$Gao.raw.clinic <- NULL
Meta$Gao.raw.clinic <- NULL
list.files(list.files.path$Project.RawData)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
traceback()
library(PublicDataNorm)
library(stringr)
project <- "Gao.PDX"
path <- "D:/JR_analytics_Rwork/JRA_U1149_Nicolle/parent" # Change parent path parent matching your own Dir configuration
list.files(path)
list.files.path <- DirCheck(project,path)
Meta <- AddExpressionMatrix(Metadata = Meta,
local = T,path = list.files.path$Project.RawData,
name.local.file ="Gao.PDX.PublishedNormalized.matrix.txt",
name = "Gao.PublishedNormalized")
Meta <- list()
list.files(list.files.path$Project.RawData)
Meta <- AddExpressionMatrix(Metadata = Meta,
local = T,path = list.files.path$Project.RawData,
name.local.file ="Gao.PDX.PublishedNormalized.matrix.txt",
name = "Gao.PublishedNormalized")
head(Meta[[1]][,1:5])
Meta[[1]] <- Meta[[1]][,-1]  # First colonne, geneSymbols drop off.
head(Meta[[1]][,1:5])
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
### ecrasement si même nom dans le Meta à faire.
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
LF <- list.files(path)
LF <- LF[str_detect(LF,"clinic")]
if(length(LF)>1){stop("Ther is more than one files with 'clinic' in its name. Switch to 'name.local.file' and 'mergeBy' ")}
if(all(str_detect(LF, ".rds|.txt|.csv|.tsv", negate = FALSE)==F)  ){stop("#55 No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(LF, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(LF) }
if(str_detect(LF, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(LF, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
if(str_detect(names(Metadata), name))
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
for i in ()
return(Metadata)
}else{ stop("No meta data object found")
} } # function
#' @param name if loca=True, names to apply in Metadata object slot
#' @param merge merge loaded data clinic with existing clinial data : full_join by rownames
#' @param name.local.file name file of interest in path directory, could be multiple names. c("a.csv","b.csv")
#' @param mergeBy colname using for merging clinical data.
#' @importFrom utils menu
#' @importFrom  purrr reduce
#' @return a data.frame in the Meta Object
#' @export
#'
#' @examples "none"
AddClinic <- function(Metadata, path, merge = c(F,T), mergeBy, name, name.local.file = NULL) {
### ecrasement si même nom dans le Meta à faire.
if(!is.null(Metadata)){
if(!is.list(Metadata)){
stop("Metadata should be a list.")}
l <-length(names(Metadata))
if(!is.null(name.local.file)){
filepath <- paste(path,name.local.file,sep="/")
if(length(filepath)>1){
if(is.null(mergeBy)){stop("For merging data from multiple loading, mergeBy='colnames' must be specified")}
clinic <- list()
count <- 0
for (i in filepath) {
if(all(str_detect(i, ".rds|.txt|.csv|.tsv", negate = FALSE)==F) ){stop("No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
count <- count+1
if(str_detect(i, ".rds", negate = FALSE)){
clinic[[count]] <- readRDS(i) }
if(str_detect(i, ".txt|.csv|.tsv", negate = FALSE)){
clinic[[count]] <- suppressWarnings(as.data.frame(data.table::fread(i, na.strings = "")))
rownames(clinic[[count]]) <-    clinic[[count]][,1]
}}
dt <- clinic %>% purrr::reduce(full_join, by=mergeBy)
rownames(dt) <- dt[,1]
}} else {
LF <- list.files(path)
LF <- LF[str_detect(LF,"clinic")]
if(length(LF)>1){stop("Ther is more than one files with 'clinic' in its name. Switch to 'name.local.file' and 'mergeBy' ")}
if(all(str_detect(LF, ".rds|.txt|.csv|.tsv", negate = FALSE)==F)  ){stop("#55 No '*.rds' or '*.txt' '.csv' files in set directory. \n change path or add file")}
if(str_detect(LF, ".rds", negate = FALSE)){Metadata[[l+1]] <- readRDS(LF) }
if(str_detect(LF, ".txt|.csv|.tsv", negate = FALSE)){
dt <- suppressWarnings(as.data.frame(data.table::fread(LF, na.strings = "")))
rownames(dt) <- dt[,1]
}}
if (merge == F){
if(str_detect(names(Metadata), name))
Metadata[[l+1]] <- dt
names(Metadata)[l+1] <- name
} else {
if(is.null(str_detect(names(Metadata),"clinic"))){stop("No clinical data found in Meta Object.\n
For merging 1 newly loaded clinical data to an already loaded file in Meta Object, firslty load one.\n
You can list a list of caracter for multiple clinical data to load at once and will be full_join.")}
if(is.null(mergeBy)){stop("For merging data, mergeBy='colnames' must be specified")}
clinic <- list(Metadata[which(str_detect(names(Metadata),"clinic"))][[1]],dt)
clinic <- clinic %>% purrr::reduce(full_join, by=mergeBy)
Metadata[which(str_detect(names(Metadata),"clinic"))][[1]] <- clinic
}
return(Metadata)
}else{ stop("No meta data object found")
} } # function
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
library(PublicDataNorm)
library(PublicDataNorm)
library(stringr)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
library(purrr)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic",
merge = F, name.local.file = NULL,mergeBy = NULL)
list.files(list.files.path$Project.RawData)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
library(dplyr)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
View(Meta)
rlang::last_error()
library(PublicDataNorm)
library(PublicDataNorm)
library(stringr)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
library(PublicDataNorm)
warnings()
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
rm(AddClinic())
rm(AddClinic
)
Meta <- AddClinic(Metadata = Meta, path = list.files.path$Project.RawData, name = "Gao.raw.clinic", merge = F,mergeBy = "SampleID",
name.local.file = c("Gao.PDX.Samples.clinic.txt" ,"Gao.PDX.Samples.clinic2.txt" )
)
rlang::last_error()
rlang::last_trace()
