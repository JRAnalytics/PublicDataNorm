#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
names(suma) <- c("Mode", "Gene not found", "Found")
print(suma)
}
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
names(suma) <- c("Mode", "Gene not found", "Found")
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
print(suma)
}
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
names(suma) <- c("Mode", "Gene not found", "Found")
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
names(suma) <- c("Mode", "Gene not found", "Found")
print(suma)
}
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
names(suma) <- c("Mode", "Gene not found", "Found")
print(suma)
}
}
message("-------------------------")
message("Checking Samples of data clinic in MetaDataData from Raw gene expression matrix")
message("-------------------------")
for (i in c){
if(all(ColN %in% rownames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
i=1
suma <- summary(rownames(Meta[[i]])%in%%in%rownames(Meta$geneAnnotation))
suma <- summary(rownames(Meta[[i]])%in%rownames(Meta$geneAnnotation))
suma
names(suma) <- c("Mode", "Gene not found", "Found")
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
}
message("-------------------------")
message("Checking Samples of data clinic in MetaDataData from Raw gene expression matrix")
message("-------------------------")
for (i in c){
if(all(ColN %in% rownames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else{
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
}}}}}}
message("-------------------------")
message("Checking Samples of data clinic in MetaDataData from Raw gene expression matrix")
message("-------------------------")
for (i in c){
if(all(ColN %in% rownames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
which(attributes(Meta)$Data.Type=="Patient.Clinical.data|Samples.Clinical.data")
attributes(Meta)
which(attributes(Meta)$Data.Type=="Patient.Clinical.data" |attributes(Meta)$Data.Type=="Samples.Clinical.data")
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Patient.Clinical.data" |attributes(MetaData)$Data.Type=="Samples.Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else{
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
}}}}}}
message("-------------------------")
message("Checking Samples of data clinic in MetaDataData from Raw gene expression matrix")
message("-------------------------")
for (i in c){
if(all(ColN %in% rownames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
c <- which(attributes(Meta)$Data.Type=="Patient.Clinical.data" |attributes(Meta)$Data.Type=="Samples.Clinical.data")
c <- which(c(attributes(Meta)$Data.Type=="Patient.Clinical.data" | attributes(Meta)$Data.Type=="Samples.Clinical.data") & attributes(Meta)$Raw.data =="No")
for (i in c){
if(all(ColN %in% rownames(Meta[[i]]))==T) {   message(paste(Meta[i]), " colnames : PASS") } else {  message(paste(Meta[i]), " rownames : FAIL") }
}
ColN <- colnames(Meta$Normalized.expression.matrix)
for (i in c){
if(all(ColN %in% rownames(Meta[[i]]))==T) {   message(paste(Meta[i]), " colnames : PASS") } else {  message(paste(Meta[i]), " rownames : FAIL") }
}
ColN
ColN %in% rownames(Meta[[i]])
for (i in c){
if(all(ColN %in% rownames(Meta[[i]]))==T) {   message(paste(names(Meta)[i]), " colnames : PASS") } else {  message(paste(names(Meta)[i]), " rownames : FAIL") }
}
for (i in c){
if(all(ColN %in% (Meta[[i]]))==T) {   message(paste(names(Meta)[i]), " colnames : PASS") } else {  message(paste(names(Meta)[i]), " rownames : FAIL") }
}
ColN %in% (Meta[[i]])
Meta[[i]]
Meta[[i]][ColN]
Meta[[i]][Meta[[i]]==ColN]
na.omit(Meta[[i]][Meta[[i]]==ColN])
all(na.omit(Meta[[i]][Meta[[i]]==ColN]))
all(is.null(na.omit(Meta[[i]][Meta[[i]]==ColN])))
all(!is.null(na.omit(Meta[[i]][Meta[[i]]==ColN])))
for (i in c){
if(all(!is.null(na.omit(Meta[[i]][Meta[[i]]==ColN])))) {   message(paste(names(Meta)[i]), " colnames : PASS") } else {  message(paste(names(Meta)[i]), " rownames : FAIL") }
}
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Patient.Clinical.data" |attributes(MetaData)$Data.Type=="Samples.Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else{
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
}}}}}}
message("-------------------------")
message("Checking Samples of data clinic in MetaDataData from Raw gene expression matrix")
message("-------------------------")
for (i in c){
if(all(!is.null(na.omit(MetaData[[i]][MetaData[[i]]==ColN])))) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
#' CheckMeta : Checking samples accors MetaData files
#'
#' @param MetaData a mMetaData list
#'
#' @return none
#' @export
#'
#' @examples "none"
CheckMeta <- function(MetaData) {
if(is.null(MetaData)){stop("Need a MetaData List file")}
if(!is.list(MetaData)){stop("Need a MetaData List file")}
l <-length(names(MetaData))
MetaDataN <- names(MetaData)
m <- which(attributes(MetaData)$Data.Type=="Expression.Matrix")
c <- which(attributes(MetaData)$Data.Type=="Patient.Clinical.data" |attributes(MetaData)$Data.Type=="Samples.Clinical.data")
ColN <- colnames(MetaData[[m[1]]])
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]))
message("-------------------------")
for (i in m){
if(all(ColN %in% colnames(MetaData[[i]]))==T) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " colnames : FAIL") }
}
message("-------------------------")
message("Checking Matrices probes")
message("-------------------------")
for (i in m){
if(all(str_detect(rownames(MetaData[[i]]), "ENSG")==T)) { message(paste(names(MetaData[i]), " gene probes as ENSEMBL"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$EnsemblID)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)==T)  { message(paste(names(MetaData[i]), " gene probes as ENTREZ gene id"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$Entrez.id)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(str_detect(rownames(MetaData[[i]]), "ILMN_")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Bead Array Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else{
if(all(str_detect(rownames(MetaData[[i]]), "_at")==T)) { message(paste(names(MetaData[i]), " gene probes as Illumina Microarray Probes"))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(length(which(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol))>1)   {
message(paste(names(MetaData[i]), " gene probes as genes Symbols"))
suma <- summary(rownames(MetaData[[i]])%in%MetaData$geneAnnotation$GeneSymbol)
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
} else {
if(all(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))) { message(paste(names(MetaData[i]), " gene probes manualy entered from published data."))
suma <- summary(rownames(MetaData[[i]])%in%rownames(MetaData$geneAnnotation))
if(length(suma)==3) {  names(suma) <- c("Mode", "Gene not found", "Found")  }
if(length(suma)==2 & names(suma)[2]=="TRUE") {  names(suma) <- c("Mode", "Found") }
if(length(suma)==2 & names(suma)[2]=="FALSE") {  names(suma) <- c("Mode", "Gene not found") }
print(suma)
}
}}}}}}
message("-------------------------")
message(paste("Checking colnames of matrices in MetaData from", names(MetaData)[m[1]]), "in clinical data.")
message("-------------------------")
for (i in c){
if(all(!is.null(na.omit(MetaData[[i]][MetaData[[i]]==ColN])))) {   message(paste(MetaDataN[i]), " colnames : PASS") } else {  message(paste(MetaDataN[i]), " rownames : FAIL") }
}
}
CheckMeta(Meta)
View(Meta)
library(PublicDataNorm)
