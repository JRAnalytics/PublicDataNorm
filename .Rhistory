FilterPatients =  FilterSP,
FilterSamples = F,
force.replace = force.replace )
if(keep.all.column==T){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = paste0(PatientsExportname,".fullCol"),
FilterPatients =FilterSP,
FilterSamples = F,
force.replace = force.replace,
keep.all.column =keep.all.column )}
} else {
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = PatientsExportname,
FilterPatients =  FilterSP,
FilterSamples = F,
force.replace = force.replace )
if(keep.all.column==T){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = paste0(PatientsExportname,".fullCol"),
FilterPatients =FilterSP,
FilterSamples = F,
force.replace = force.replace,
keep.all.column =keep.all.column )}
}
}}
return(Metadata)
}
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = T,force.replace = T,
keep.all.column = F)
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
View(Metadata)
###### By hand unfortunately for the first time
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.samplesAnnotation.csv",
name = "Raw.sampleannot",
type = "Samples",
setID.Column =  "id_cit", #set SamplesID colnames with  setID.Column values
Export = F) %>%
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.Clinic.all.csv",
name = "Raw.Patientannot",
type = "Patients",
setID.Column =  "id_cit", #set PatientsID colnames with  setID.Column values
Export = F)
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.Clinic.all.csv",
name = "Raw.Patientannot",
type = "Patients",
setID.Column =  "id_cit", #set PatientsID colnames with  setID.Column values
Export = F)
attributes(Metadata)
CheckMeta(Metadata)
Metadata <- AddExpressionMatrixRNAseq(Metadata = Metadata,
ExpressionMatrix = "PANC.rawcount.csv",
name = "raw.count") %>%
AddExpressionMatrixRNAseq(ExpressionMatrix ="PANC.NormCount.csv",
name = "norm.count")
attributes(Metadata)
CheckMeta(Metadata)
Metadata$raw.count$V1 <- NULL  # First colonne, geneSymbols drop off.
Metadata$norm.count$V1 <- NULL # First colonne, geneSymbols drop off.
CheckMeta(Metadata)
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="#NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="xx"] = NA
Metadata$Raw.Patientannot = Metadata$Raw.Patientannot[!is.na(Metadata$Raw.Patientannot$PatientsID),]
Metadata$Raw.Patientannot= as.data.frame(Metadata$Raw.Patientannot)
rownames(Metadata$Raw.Patientannot) = Metadata$Raw.Patientannot$PatientsID
CheckMeta(Metadata)
str(Metadata$Raw.Patientannot)
Metadata$Raw.Patientannot = Charac.to.Num(Metadata$Raw.Patientannot)
SL = CreateLexic(Dataset = Metadata, type = "SamplesLexic")
PL = CreateLexic(Dataset = Metadata, type = "PatientsLexic")
SL = addSeveralKeysToLexic(lexic = SL, vector = c("PatientsID"="id_patient",
"PatientSampling"="surgery_type",
"SamplePathologicalState"="tumor_type",
"HadTreatment"="treatment_adjuvant"))
PL = addSeveralKeysToLexic(lexic = PL, vector = c("PatientsID"="PatientsID",
"MainRNAID"="id_cit",
"Age"="Age.a.la.chir",
"OSdelay"="SG",
"OSevent"="DC",
"pT"="T",
"pN"="N",
"pM"="M",
"pTNM"="stade.TNM",
"Differenciation"="Differenc"))
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = NULL,
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = NULL,
SamplesAnnotToClean = NULL,
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
Metadata[["Patients.Clinic"]]
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = NULL,
SamplesAnnotToClean = NULL,
SamplesExportname ="SamplesAnnot" ,
FilterSP = T,force.replace = T,
keep.all.column = F)
###### By hand unfortunately for the first time
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.samplesAnnotation.csv",
name = "Raw.sampleannot",
type = "Samples",
setID.Column =  "id_cit", #set SamplesID colnames with  setID.Column values
Export = F)
Metadata <- AddExpressionMatrixRNAseq(Metadata = Metadata,
ExpressionMatrix = "PANC.rawcount.csv",
name = "raw.count") %>%
AddExpressionMatrixRNAseq(ExpressionMatrix ="PANC.NormCount.csv",
name = "norm.count")
attributes(Metadata)
CheckMeta(Metadata)
Metadata$raw.count$V1 <- NULL  # First colonne, geneSymbols drop off.
Metadata$norm.count$V1 <- NULL # First colonne, geneSymbols drop off.
CheckMeta(Metadata)
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="#NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="xx"] = NA
Metadata$Raw.sampleannot= as.data.frame(Metadata$Raw.sampleannot)
rownames(Metadata$Raw.sampleannot) = Metadata$Raw.sampleannot$SamplesID
CheckMeta(Metadata)
str(Metadata$Raw.sampleannot)
Metadata$Raw.sampleannot = Charac.to.Num(Metadata$Raw.sampleannot)
SL = CreateLexic(Dataset = Metadata, type = "SamplesLexic")
PL = CreateLexic(Dataset = Metadata, type = "PatientsLexic")
SL = addSeveralKeysToLexic(lexic = SL, vector = c("PatientsID"="id_patient",
"PatientSampling"="surgery_type",
"SamplePathologicalState"="tumor_type",
"HadTreatment"="treatment_adjuvant"))
PL = addSeveralKeysToLexic(lexic = PL, vector = c("PatientsID"="PatientsID",
"MainRNAID"="id_cit",
"Age"="Age.a.la.chir",
"OSdelay"="SG",
"OSevent"="DC",
"pT"="T",
"pN"="N",
"pM"="M",
"pTNM"="stade.TNM",
"Differenciation"="Differenc"))
Metadata = CleaningData(Metadata,
PatientsLexic = NULL,
PatientsAnnotToClean =NULL ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
Metadata[["SamplesAnnot"]]
Metadata = CleaningData(Metadata,
PatientsLexic = NULL,
PatientsAnnotToClean =NULL ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = T,force.replace = T,
keep.all.column = F)
###### By hand unfortunately for the first time
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.samplesAnnotation.csv",
name = "Raw.sampleannot",
type = "Samples",
setID.Column =  "id_cit", #set SamplesID colnames with  setID.Column values
Export = F) %>%
AddClinicFromFile(ClinicFile = "PANC.Clinic.all.csv",
name = "Raw.Patientannot",
type = "Patients",
setID.Column =  "id_cit", #set PatientsID colnames with  setID.Column values
Export = F)
attributes(Metadata)
CheckMeta(Metadata)
Metadata <- AddExpressionMatrixRNAseq(Metadata = Metadata,
ExpressionMatrix = "PANC.rawcount.csv",
name = "raw.count") %>%
AddExpressionMatrixRNAseq(ExpressionMatrix ="PANC.NormCount.csv",
name = "norm.count")
attributes(Metadata)
CheckMeta(Metadata)
Metadata$raw.count$V1 <- NULL  # First colonne, geneSymbols drop off.
Metadata$norm.count$V1 <- NULL # First colonne, geneSymbols drop off.
CheckMeta(Metadata)
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="#NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="xx"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="#NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="xx"] = NA
Metadata$Raw.Patientannot = Metadata$Raw.Patientannot[!is.na(Metadata$Raw.Patientannot$PatientsID),]
Metadata$Raw.sampleannot= as.data.frame(Metadata$Raw.sampleannot)
rownames(Metadata$Raw.sampleannot) = Metadata$Raw.sampleannot$SamplesID
Metadata$Raw.Patientannot= as.data.frame(Metadata$Raw.Patientannot)
rownames(Metadata$Raw.Patientannot) = Metadata$Raw.Patientannot$PatientsID
CheckMeta(Metadata)
str(Metadata$Raw.sampleannot)
Metadata$Raw.sampleannot = Charac.to.Num(Metadata$Raw.sampleannot)
str(Metadata$Raw.Patientannot)
Metadata$Raw.Patientannot = Charac.to.Num(Metadata$Raw.Patientannot)
SL = CreateLexic(Dataset = Metadata, type = "SamplesLexic")
PL = CreateLexic(Dataset = Metadata, type = "PatientsLexic")
SL = addSeveralKeysToLexic(lexic = SL, vector = c("PatientsID"="id_patient",
"PatientSampling"="surgery_type",
"SamplePathologicalState"="tumor_type",
"HadTreatment"="treatment_adjuvant"))
CleaningData = function(Metadata = NULL,
PatientsLexic = NULL,
PatientsAnnotToClean = NULL,
PatientsExportname = NULL,
SamplesLexic = NULL,
SamplesAnnotToClean = NULL,
SamplesExportname = NULL,
FilterSP =  F,
force.replace = F,
keep.all.column = F){
if(is.null(Metadata)){stop("No Metadata found.")}
if(is.null(PatientsLexic)&is.null(SamplesLexic)){stop("a PatientsLexic or SamplesLexic is mandatory for data cleaning")}
if(!is.null(SamplesLexic)){
if(is.null(SamplesAnnotToClean)){stop("SamplesAnnotToClean has to be specify.")}
SamAnnotRaw = which(attributes(Metadata)$Data.Type=="SamplesAnnot" & attributes(Metadata)$Cleaned == "No")
ClinicRaw = which(attributes(Metadata)$Data.Type=="Clinic" & attributes(Metadata)$Cleaned == "No")
if(length(SamAnnotRaw)!=0){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = SamplesLexic,
type = "Samples",
ClinicToClean = SamplesAnnotToClean,
exportname = SamplesExportname,
FilterSamples =  FilterSP,
force.replace = force.replace )
if(keep.all.column==T){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = SamplesLexic,
type = "Samples",
ClinicToClean = SamplesAnnotToClean,
exportname = paste0(SamplesExportname,".fullCol"),
FilterSamples =  FilterSP,
force.replace = force.replace,
keep.all.column =keep.all.column )}
}
}
if(!is.null(PatientsLexic)){
if(is.null(PatientsAnnotToClean)){stop("PatientsAnnotToClean has to be specify.")}
ClinicRaw = which(attributes(Metadata)$Data.Type=="Clinic" & attributes(Metadata)$Cleaned == "No")
SamAnnotRaw = which(attributes(Metadata)$Data.Type=="SamplesAnnot" & attributes(Metadata)$Cleaned == "No")
if(length(ClinicRaw)!=0){
if(length(SamAnnotRaw)!=0){
SID =  Metadata[[SamAnnotRaw[1]]]$SamplesID
if(is.null( Metadata[[SamAnnotRaw[1]]]$PatientsID)){message(paste("No PatientsID column found in", names(Metadata)[SamAnnotRaw[1]], "\nCleaning may be sub optimal."))}
PID =  Metadata[[ClinicRaw[1]]]$PatientsID
if(is.null( Metadata[[ClinicRaw[1]]]$SamplesID)){message(paste("No SamplesID column found in", names(Metadata)[ClinicRaw[1]], "\nCleaning may be sub optimal."))}
if(length(which(PID%in%SID))==length(SID)){
message("All PatientsID are found as SamplesID")
PatientsLexic <- AddKeyLexic(lexic = PatientsLexic, key ="SamplesID"  ,value = "SamplesID" )
Metadata[[ClinicRaw[1]]]$SamplesID =  Metadata[[ClinicRaw[1]]]$PatientsID
PatientsLexic <- AddKeyLexic(lexic = PatientsLexic, key ="SamplesID"  ,value = "SamplesID" )
} else {
if(length(which(PID%in%SID))<length(SID)){
message("Not all PatientsID are found as SamplesID")
Metadata[[ClinicRaw[1]]]= Metadata[[ClinicRaw[1]]][which(PID%in%SID),]
Metadata[[ClinicRaw[1]]]$SamplesID =  Metadata[[ClinicRaw[1]]]$PatientsID
PatientsLexic <- AddKeyLexic(lexic = PatientsLexic, key ="SamplesID"  ,value = "SamplesID" )}
else {
if(length(which(PID%in%SID))==0){
message(paste("No PatientsID are found as SamplesID. Try setting 'PatientID' in", names(Metadata)[ClinicRaw[1]]))
}
}}
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = PatientsExportname,
FilterPatients =  FilterSP,
FilterSamples = F,
force.replace = force.replace )
if(keep.all.column==T){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = paste0(PatientsExportname,".fullCol"),
FilterPatients =FilterSP,
FilterSamples = F,
force.replace = force.replace,
keep.all.column =keep.all.column )}
} else {
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = PatientsExportname,
FilterPatients =  FilterSP,
FilterSamples = F,
force.replace = force.replace )
if(keep.all.column==T){
Metadata <- CleaningClinic(Metadata = Metadata,
Lexic = PatientsLexic,
type = "Patients",
ClinicToClean = PatientsAnnotToClean,
exportname = paste0(PatientsExportname,".fullCol"),
FilterPatients =FilterSP,
FilterSamples = F,
force.replace = force.replace,
keep.all.column =keep.all.column )}
}
}}
return(Metadata)
}
View(Metadata)
SL = addSeveralKeysToLexic(lexic = SL, vector = c("PatientsID"="id_patient",
"PatientSampling"="surgery_type",
"SamplePathologicalState"="tumor_type",
"HadTreatment"="treatment_adjuvant"))
PL = addSeveralKeysToLexic(lexic = PL, vector = c("PatientsID"="PatientsID",
"MainRNAID"="id_cit",
"Age"="Age.a.la.chir",
"OSdelay"="SG",
"OSevent"="DC",
"pT"="T",
"pN"="N",
"pM"="M",
"pTNM"="stade.TNM",
"Differenciation"="Differenc"))
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
Metadata[["Patients.Clinic"]]
Metadata[["SamplesAnnot"]]
attributes(Metadata)
CheckCleaning(Metadata)
CheckCleaning(Metadata)
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = T,
force.replace = T,
keep.all.column = T)
View(Metadata)
CheckCleaning(Metadata)
CheckMeta(Metadata)
colnames(Metadata$Clinic)
library(PublicDataNorm)
library(PublicDataNorm)
###### By hand unfortunately for the first time
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.samplesAnnotation.csv",
name = "Raw.sampleannot",
type = "Samples",
setID.Column =  "id_cit", #set SamplesID colnames with  setID.Column values
Export = F) %>%
AddClinicFromFile(ClinicFile = "PANC.Clinic.all.csv",
name = "Raw.Patientannot",
type = "Patients",
setID.Column =  "id_cit", #set PatientsID colnames with  setID.Column values
Export = F)
attributes(Metadata)
CheckMeta(Metadata)
library(PublicDataNorm)
library(stringr)
library(purrr)
library(dplyr)
# Step 1 : Create project folders in other sub dir in Parent folder.
project <- "PANC.RNAseq"
path <- "E:/DataBase" # Change parent path parent matching your own Dir configuration
list.files(path)
###### By hand unfortunately for the first time
Metadata <- CreateDataset(project,path) %>%
AddClinicFromFile(ClinicFile = "PANC.samplesAnnotation.csv",
name = "Raw.sampleannot",
type = "Samples",
setID.Column =  "id_cit", #set SamplesID colnames with  setID.Column values
Export = F) %>%
AddClinicFromFile(ClinicFile = "PANC.Clinic.all.csv",
name = "Raw.Patientannot",
type = "Patients",
setID.Column =  "id_cit", #set PatientsID colnames with  setID.Column values
Export = F)
attributes(Metadata)
CheckMeta(Metadata)
Metadata <- AddExpressionMatrixRNAseq(Metadata = Metadata,
ExpressionMatrix = "PANC.rawcount.csv",
name = "raw.count") %>%
AddExpressionMatrixRNAseq(ExpressionMatrix ="PANC.NormCount.csv",
name = "norm.count") %>%
AddgeneAnnotFromObject(geneAnnotIDcolumn =1 ,
Filter.Genes = T,
object = {as.data.frame(data.table::fread(file.path(path,"01RawData",project,"PANC.probesAnnot.csv")))})
colnames(Metadata$geneAnnotation) = c("EnsembleID"  ,     "chr",       "start"   ,    "end"    ,   "strand"  ,     "GeneID" ,  "GeneName")
attributes(Metadata)
CheckMeta(Metadata)
attributes(Metadata)
Metadata$raw.count$V1 <- NULL  # First colonne, geneSymbols drop off.
Metadata$norm.count$V1 <- NULL # First colonne, geneSymbols drop off.
CheckMeta(Metadata)
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="#NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="NA"] = NA
Metadata$Raw.sampleannot[Metadata$Raw.sampleannot=="xx"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="#NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="NA"] = NA
Metadata$Raw.Patientannot[Metadata$Raw.Patientannot=="xx"] = NA
Metadata$Raw.Patientannot = Metadata$Raw.Patientannot[!is.na(Metadata$Raw.Patientannot$PatientsID),]
Metadata$Raw.sampleannot= as.data.frame(Metadata$Raw.sampleannot)
rownames(Metadata$Raw.sampleannot) = Metadata$Raw.sampleannot$SamplesID
Metadata$Raw.Patientannot= as.data.frame(Metadata$Raw.Patientannot)
rownames(Metadata$Raw.Patientannot) = Metadata$Raw.Patientannot$PatientsID
CheckMeta(Metadata)
str(Metadata$Raw.sampleannot)
Metadata$Raw.sampleannot = Charac.to.Num(Metadata$Raw.sampleannot)
str(Metadata$Raw.Patientannot)
Metadata$Raw.Patientannot = Charac.to.Num(Metadata$Raw.Patientannot)
SL = CreateLexic(Dataset = Metadata, type = "SamplesLexic")
PL = CreateLexic(Dataset = Metadata, type = "PatientsLexic")
SL = addSeveralKeysToLexic(lexic = SL, vector = c("PatientsID"="id_patient",
"PatientSampling"="surgery_type",
"SamplePathologicalState"="tumor_type",
"HadTreatment"="treatment_adjuvant"))
PL = addSeveralKeysToLexic(lexic = PL, vector = c("PatientsID"="PatientsID",
"MainRNAID"="id_cit",
"Age"="Age.a.la.chir",
"OSdelay"="SG",
"OSevent"="DC",
"pT"="T",
"pN"="N",
"pM"="M",
"pTNM"="stade.TNM",
"Differenciation"="Differenc"))
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = F,force.replace = T,
keep.all.column = F)
attributes(Metadata)
Metadata = CleaningData(Metadata,
PatientsLexic = PL,
PatientsAnnotToClean ="Raw.Patientannot" ,
PatientsExportname ="Patients.Clinic" ,
SamplesLexic = SL,
SamplesAnnotToClean = "Raw.sampleannot",
SamplesExportname ="SamplesAnnot" ,
FilterSP = T,
force.replace = T,
keep.all.column = T)
CheckCleaning(Metadata)
CheckMeta(Metadata)
View(Metadata)
CheckMeta(Metadata)
#Step 7 : Export data as ".csv"
Metadata = ExportTSV(Metadata)
attributes(Metadata)
AddLocalDatabase(Metadata = Metadata,
Normalization.Method = NA,
Technology = "RNAseq",
Platform = NA,
Run.spec = NA,
First.Author = "Puleo F.",
DOI = "10.1053/j.gastro.2018.08.033",
Comment = "Pour methodo et plateforme RNAseq, demander à Remy je pense",
User = "JR-Analytics")
attributes(Metadata)
